---
import Layout from "@layouts/Layout.astro";
import PostMeta from "@components/header-post-meta.astro";
import { getCollection, CollectionEntry } from "astro:content";
import site, { git } from "@src/metadata.json";
import config from "../../astro.config.mjs";

export async function getStaticPaths() {
  const posts = await getCollection("post");
  return posts.map((entry) => ({
    params: { post_slug: entry.slug },
    props: { entry },
  }));
}

interface Props {
  entry: CollectionEntry<"post">;
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<Layout title={`${entry.data.title} | ${site.title}`}>
  <main class="prose">
    <article>
      <h1>{entry.data.title}</h1>
      {
        entry.data.publishDate && (
          <time datetime={entry.data.publishDate.toISOString()}>
            {entry.data.publishDate.toDateString()}
          </time>
        )
      }
      <Content />
    </article>
    <section id="nerd">
      <p>Nerd stuff</p>
      <a
        target="_blank"
        rel="noreferrer noopener"
        href=`https://github.com/${git.repo}/commits/main/${git.path}/src/content/${entry.collection}/${entry.id}`
        >File history</a
      >
    </section>
  </main>
  <PostMeta
    slot="page-meta"
    title={entry.data.title}
    description={entry.data.description}
    og={entry.data.og}
    url={new URL(entry.slug, config.site).toString()}
  />
</Layout>

<style is:global>
  #nerd {
    box-sizing: border-box;
    padding: 1rem;
    background-color: #ddd;
  }
  #nerd:not(:target) {
    display: none;
  }
</style>
